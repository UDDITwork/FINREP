/**
 * Test script for enhanced PDF generation with comprehensive advisor header
 * 
 * This script tests the new PDF generation functionality with all advisor data
 * including certifications, memberships, digital presence, working hours, etc.
 */

const PDFGenerationService = require('./services/pdfGenerationService');
const { logger } = require('./utils/logger');

async function testEnhancedPDFGeneration() {
  try {
    logger.info('🧪 [TEST] Starting enhanced PDF generation test');

    // Create comprehensive mock advisor data
    const mockVaultData = {
      advisorId: '507f1f77bcf86cd799439011',
      firstName: 'Dr. Priya',
      lastName: 'Sharma',
      email: 'priya.sharma@wealthadvisors.com',
      phoneNumber: '+91-98765-43210',
      firmName: 'Wealth Advisors India',
      sebiRegNumber: 'SEBI/INV/2023/001234',
      revenueModel: 'Fee-Only',
      fpsbNumber: 'FPSB123456',
      riaNumber: 'RIA789012',
      arnNumber: 'ARN345678',
      amfiRegNumber: 'AMFI901234',
      isEmailVerified: true,
      status: 'active',
      certifications: [
        {
          name: 'Certified Financial Planner (CFP)',
          issuingBody: 'Financial Planning Standards Board India',
          issueDate: new Date('2020-03-15'),
          expiryDate: new Date('2025-03-15'),
          certificateNumber: 'CFP2020001234',
          isActive: true
        },
        {
          name: 'Chartered Financial Analyst (CFA)',
          issuingBody: 'CFA Institute',
          issueDate: new Date('2019-06-20'),
          expiryDate: new Date('2024-06-20'),
          certificateNumber: 'CFA2019005678',
          isActive: true
        },
        {
          name: 'Certified Investment Management Analyst (CIMA)',
          issuingBody: 'Investment Management Consultants Association',
          issueDate: new Date('2018-09-10'),
          expiryDate: new Date('2023-09-10'),
          certificateNumber: 'CIMA2018009012',
          isActive: false
        }
      ],
      memberships: [
        {
          organization: 'Financial Planning Standards Board India',
          membershipType: 'Professional Member',
          memberSince: new Date('2020-03-15'),
          membershipNumber: 'FPSB2020001234',
          isActive: true
        },
        {
          organization: 'Association of Registered Investment Advisors',
          membershipType: 'Full Member',
          memberSince: new Date('2019-06-20'),
          membershipNumber: 'ARIA2019005678',
          isActive: true
        }
      ],
      documents: [
        {
          name: 'SEBI Registration Certificate',
          description: 'Official SEBI registration document',
          category: 'certificate',
          fileUrl: 'https://example.com/docs/sebi-cert.pdf',
          fileSize: 2048576,
          uploadedAt: new Date('2023-01-15'),
          isActive: true
        },
        {
          name: 'Professional Indemnity Insurance',
          description: 'Insurance coverage document',
          category: 'compliance',
          fileUrl: 'https://example.com/docs/insurance.pdf',
          fileSize: 1536000,
          uploadedAt: new Date('2023-01-10'),
          isActive: true
        }
      ],
      branding: {
        primaryColor: '#1E40AF',
        secondaryColor: '#64748B',
        accentColor: '#F59E0B',
        logo: {
          url: '', // Use empty URL to avoid external resource loading
          altText: 'Wealth Advisors India Logo'
        },
        typography: {
          primaryFont: 'Inter',
          secondaryFont: 'Roboto',
          fontSize: 'medium'
        },
        tagline: 'Your Trusted Partner in Financial Success'
      },
      digitalPresence: {
        website: 'www.wealthadvisorsindia.com',
        linkedin: 'linkedin.com/in/priyasharma-cfp',
        twitter: 'twitter.com/priyasharma_cfp',
        facebook: 'facebook.com/wealthadvisorsindia',
        instagram: 'instagram.com/wealthadvisorsindia',
        youtube: 'youtube.com/c/wealthadvisorsindia'
      },
      whiteLabel: {
        isEnabled: true,
        companyName: 'Wealth Advisors India',
        customDomain: 'https://app.wealthadvisorsindia.com',
        apiKeys: [
          {
            name: 'NSE API',
            key: 'nse_api_key_1234567890abcdef',
            isActive: true,
            createdAt: new Date('2023-01-01')
          },
          {
            name: 'BSE API',
            key: 'bse_api_key_abcdef1234567890',
            isActive: true,
            createdAt: new Date('2023-01-01')
          }
        ]
      },
      reportCustomization: {
        headerStyle: 'modern',
        footerStyle: 'detailed',
        watermark: {
          isEnabled: true,
          text: 'CONFIDENTIAL',
          opacity: 0.1
        },
        customFooter: 'This report is generated by Wealth Advisors India. For queries, contact us at support@wealthadvisorsindia.com'
      },
      scheduling: {
        workingHours: {
          monday: { isWorking: true, startTime: '09:00', endTime: '18:00' },
          tuesday: { isWorking: true, startTime: '09:00', endTime: '18:00' },
          wednesday: { isWorking: true, startTime: '09:00', endTime: '18:00' },
          thursday: { isWorking: true, startTime: '09:00', endTime: '18:00' },
          friday: { isWorking: true, startTime: '09:00', endTime: '17:00' },
          saturday: { isWorking: true, startTime: '10:00', endTime: '14:00' },
          sunday: { isWorking: false, startTime: '09:00', endTime: '13:00' }
        },
        appointmentDuration: 60,
        timezone: 'Asia/Kolkata',
        bufferTime: { before: 15, after: 15 }
      }
    };

    // Create mock client data
    const mockClientData = {
      client: {
        _id: '507f1f77bcf86cd799439012',
        firstName: 'Rajesh',
        lastName: 'Kumar',
        email: 'rajesh.kumar@email.com',
        phoneNumber: '+91-98765-43211',
        dateOfBirth: '1985-05-15',
        occupation: 'Software Engineer',
        incomeType: 'salaried',
        maritalStatus: 'married',
        dependents: 2,
        address: '123 Tech Park, Bangalore, Karnataka 560001',
        financialData: {
          monthlyIncome: 150000,
          monthlyExpenses: 90000,
          emergencyFund: 500000,
          assets: [
            { name: 'Savings Account', value: 800000, type: 'liquid' },
            { name: 'Mutual Funds', value: 1200000, type: 'investment' },
            { name: 'Real Estate', value: 5000000, type: 'property' },
            { name: 'Stocks', value: 300000, type: 'equity' }
          ],
          liabilities: [
            { name: 'Home Loan', amount: 3000000, type: 'secured' },
            { name: 'Car Loan', amount: 500000, type: 'secured' },
            { name: 'Credit Card', amount: 75000, type: 'unsecured' }
          ]
        },
        goals: [
          {
            name: 'Retirement Planning',
            targetAmount: 20000000,
            currentAmount: 5000000,
            targetDate: '2045-05-15'
          },
          {
            name: 'Children Education',
            targetAmount: 5000000,
            currentAmount: 1000000,
            targetDate: '2035-05-15'
          }
        ]
      },
      vault: mockVaultData,
      financialPlans: [],
      meetings: [],
      loeDocuments: [],
      loeAutomation: [],
      abTestSessions: [],
      chatHistory: [],
      mutualFundExitStrategies: [],
      clientInvitations: [],
      estateInformation: null,
      mutualFundRecommend: [],
      taxPlanning: null
    };

    // Initialize PDF service
    const pdfService = new PDFGenerationService();

    // Generate PDF
    logger.info('🔄 [TEST] Generating enhanced PDF with comprehensive advisor data...');
    const startTime = Date.now();
    
    const pdfBuffer = await pdfService.generateClientReport(mockClientData, mockVaultData);
    
    const duration = Date.now() - startTime;
    const pdfSizeKB = Math.round(pdfBuffer.length / 1024);

    logger.info('✅ [TEST] Enhanced PDF generated successfully!', {
      duration: `${duration}ms`,
      pdfSize: `${pdfSizeKB}KB`,
      advisorName: `${mockVaultData.firstName} ${mockVaultData.lastName}`,
      firmName: mockVaultData.firmName,
      certifications: mockVaultData.certifications.length,
      memberships: mockVaultData.memberships.length,
      hasLogo: !!mockVaultData.branding.logo.url,
      hasSocialMedia: !!(mockVaultData.digitalPresence.linkedin || mockVaultData.digitalPresence.twitter),
      whiteLabelEnabled: mockVaultData.whiteLabel.isEnabled
    });

    // Save PDF for inspection
    const fs = require('fs');
    const path = require('path');
    const outputPath = path.join(__dirname, 'uploads', 'enhanced-test-report.pdf');
    
    // Ensure uploads directory exists
    const uploadsDir = path.dirname(outputPath);
    if (!fs.existsSync(uploadsDir)) {
      fs.mkdirSync(uploadsDir, { recursive: true });
    }
    
    fs.writeFileSync(outputPath, pdfBuffer);
    
    logger.info('📄 [TEST] PDF saved to:', outputPath);
    logger.info('🎉 [TEST] Enhanced PDF generation test completed successfully!');
    
    return {
      success: true,
      pdfSize: pdfSizeKB,
      duration: duration,
      outputPath: outputPath
    };

  } catch (error) {
    logger.error('❌ [TEST] Enhanced PDF generation test failed', {
      error: error.message,
      stack: error.stack
    });
    
    return {
      success: false,
      error: error.message
    };
  }
}

// Run the test
if (require.main === module) {
  testEnhancedPDFGeneration()
    .then(result => {
      if (result.success) {
        console.log('\n🎉 Test completed successfully!');
        console.log(`📄 PDF Size: ${result.pdfSize}KB`);
        console.log(`⏱️  Duration: ${result.duration}ms`);
        console.log(`📁 Output: ${result.outputPath}`);
      } else {
        console.log('\n❌ Test failed:', result.error);
        process.exit(1);
      }
    })
    .catch(error => {
      console.error('\n💥 Test crashed:', error.message);
      process.exit(1);
    });
}

module.exports = testEnhancedPDFGeneration;
